//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pamela_4._0.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PamelaEntities : DbContext
    {
        public PamelaEntities()
            : base("name=PamelaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Becado> Becadoes { get; set; }
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Escuela> Escuelas { get; set; }
        public virtual DbSet<FolioAnual> FolioAnuals { get; set; }
        public virtual DbSet<HistoricoAnual> HistoricoAnuals { get; set; }
        public virtual DbSet<Periodo> Periodos { get; set; }
        public virtual DbSet<Servicio> Servicios { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tutor> Tutors { get; set; }
    
        public virtual int ActualizaBecado(Nullable<int> idBecado, Nullable<int> idPadre, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono)
        {
            var idBecadoParameter = idBecado.HasValue ?
                new ObjectParameter("idBecado", idBecado) :
                new ObjectParameter("idBecado", typeof(int));
    
            var idPadreParameter = idPadre.HasValue ?
                new ObjectParameter("idPadre", idPadre) :
                new ObjectParameter("idPadre", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaBecado", idBecadoParameter, idPadreParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter);
        }
    
        public virtual int BuscarBecado(Nullable<int> iDBecado, string nombreBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            var nombreBecadoParameter = nombreBecado != null ?
                new ObjectParameter("NombreBecado", nombreBecado) :
                new ObjectParameter("NombreBecado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuscarBecado", iDBecadoParameter, nombreBecadoParameter);
        }
    
        public virtual int BuscarBecadoBD3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuscarBecadoBD3");
        }
    
        public virtual ObjectResult<BuscarNuevaTabla_Result> BuscarNuevaTabla()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarNuevaTabla_Result>("BuscarNuevaTabla");
        }
    
        public virtual int InsertaAnual(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaAnual", fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual int InsertaBecado(Nullable<int> idtutor, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono)
        {
            var idtutorParameter = idtutor.HasValue ?
                new ObjectParameter("idtutor", idtutor) :
                new ObjectParameter("idtutor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaBecado", idtutorParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter);
        }
    
        public virtual int InsertaCategoria(string nombre, string duracionPeriodo, Nullable<int> numeroHoras, Nullable<decimal> parcialidad1, Nullable<decimal> parcialidad2, Nullable<decimal> parcialidad3, Nullable<decimal> parcialidad4, Nullable<decimal> parcialidad5, Nullable<System.DateTime> fechaP1, Nullable<System.DateTime> fechaP2, Nullable<System.DateTime> fechaP3, Nullable<System.DateTime> fechaP4, Nullable<System.DateTime> fechaP5)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var duracionPeriodoParameter = duracionPeriodo != null ?
                new ObjectParameter("duracionPeriodo", duracionPeriodo) :
                new ObjectParameter("duracionPeriodo", typeof(string));
    
            var numeroHorasParameter = numeroHoras.HasValue ?
                new ObjectParameter("numeroHoras", numeroHoras) :
                new ObjectParameter("numeroHoras", typeof(int));
    
            var parcialidad1Parameter = parcialidad1.HasValue ?
                new ObjectParameter("parcialidad1", parcialidad1) :
                new ObjectParameter("parcialidad1", typeof(decimal));
    
            var parcialidad2Parameter = parcialidad2.HasValue ?
                new ObjectParameter("parcialidad2", parcialidad2) :
                new ObjectParameter("parcialidad2", typeof(decimal));
    
            var parcialidad3Parameter = parcialidad3.HasValue ?
                new ObjectParameter("parcialidad3", parcialidad3) :
                new ObjectParameter("parcialidad3", typeof(decimal));
    
            var parcialidad4Parameter = parcialidad4.HasValue ?
                new ObjectParameter("parcialidad4", parcialidad4) :
                new ObjectParameter("parcialidad4", typeof(decimal));
    
            var parcialidad5Parameter = parcialidad5.HasValue ?
                new ObjectParameter("parcialidad5", parcialidad5) :
                new ObjectParameter("parcialidad5", typeof(decimal));
    
            var fechaP1Parameter = fechaP1.HasValue ?
                new ObjectParameter("fechaP1", fechaP1) :
                new ObjectParameter("fechaP1", typeof(System.DateTime));
    
            var fechaP2Parameter = fechaP2.HasValue ?
                new ObjectParameter("fechaP2", fechaP2) :
                new ObjectParameter("fechaP2", typeof(System.DateTime));
    
            var fechaP3Parameter = fechaP3.HasValue ?
                new ObjectParameter("fechaP3", fechaP3) :
                new ObjectParameter("fechaP3", typeof(System.DateTime));
    
            var fechaP4Parameter = fechaP4.HasValue ?
                new ObjectParameter("fechaP4", fechaP4) :
                new ObjectParameter("fechaP4", typeof(System.DateTime));
    
            var fechaP5Parameter = fechaP5.HasValue ?
                new ObjectParameter("fechaP5", fechaP5) :
                new ObjectParameter("fechaP5", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaCategoria", nombreParameter, duracionPeriodoParameter, numeroHorasParameter, parcialidad1Parameter, parcialidad2Parameter, parcialidad3Parameter, parcialidad4Parameter, parcialidad5Parameter, fechaP1Parameter, fechaP2Parameter, fechaP3Parameter, fechaP4Parameter, fechaP5Parameter);
        }
    
        public virtual int InsertaEscuela(string nombre, string direccion, string encargado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var encargadoParameter = encargado != null ?
                new ObjectParameter("encargado", encargado) :
                new ObjectParameter("encargado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaEscuela", nombreParameter, direccionParameter, encargadoParameter);
        }
    
        public virtual int InsertaFolioAnual(Nullable<decimal> monto, Nullable<System.DateTime> fecha, string modopago)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var modopagoParameter = modopago != null ?
                new ObjectParameter("modopago", modopago) :
                new ObjectParameter("modopago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaFolioAnual", montoParameter, fechaParameter, modopagoParameter);
        }
    
        public virtual int InsertaFolioSemestral(Nullable<int> iDFolio, Nullable<decimal> monto, Nullable<System.DateTime> fecha, string modoPago, Nullable<int> iDHistorico)
        {
            var iDFolioParameter = iDFolio.HasValue ?
                new ObjectParameter("IDFolio", iDFolio) :
                new ObjectParameter("IDFolio", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var modoPagoParameter = modoPago != null ?
                new ObjectParameter("ModoPago", modoPago) :
                new ObjectParameter("ModoPago", typeof(string));
    
            var iDHistoricoParameter = iDHistorico.HasValue ?
                new ObjectParameter("IDHistorico", iDHistorico) :
                new ObjectParameter("IDHistorico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaFolioSemestral", iDFolioParameter, montoParameter, fechaParameter, modoPagoParameter, iDHistoricoParameter);
        }
    
        public virtual int InsertaHistoricoAnual(Nullable<int> idAnual, Nullable<int> idBecado, Nullable<int> idCategoria, Nullable<int> idEscuela, Nullable<int> promedio, Nullable<int> idServicio, Nullable<int> horasRealizadas)
        {
            var idAnualParameter = idAnual.HasValue ?
                new ObjectParameter("idAnual", idAnual) :
                new ObjectParameter("idAnual", typeof(int));
    
            var idBecadoParameter = idBecado.HasValue ?
                new ObjectParameter("idBecado", idBecado) :
                new ObjectParameter("idBecado", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idEscuelaParameter = idEscuela.HasValue ?
                new ObjectParameter("idEscuela", idEscuela) :
                new ObjectParameter("idEscuela", typeof(int));
    
            var promedioParameter = promedio.HasValue ?
                new ObjectParameter("promedio", promedio) :
                new ObjectParameter("promedio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("idServicio", idServicio) :
                new ObjectParameter("idServicio", typeof(int));
    
            var horasRealizadasParameter = horasRealizadas.HasValue ?
                new ObjectParameter("horasRealizadas", horasRealizadas) :
                new ObjectParameter("horasRealizadas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaHistoricoAnual", idAnualParameter, idBecadoParameter, idCategoriaParameter, idEscuelaParameter, promedioParameter, idServicioParameter, horasRealizadasParameter);
        }
    
        public virtual int InsertaHistoricoSemestral(Nullable<int> idSemestral, Nullable<int> idBecado, Nullable<int> idCategoria, Nullable<int> idEscuela, Nullable<int> promedio, Nullable<int> idServicio, Nullable<int> horasRealizadas)
        {
            var idSemestralParameter = idSemestral.HasValue ?
                new ObjectParameter("idSemestral", idSemestral) :
                new ObjectParameter("idSemestral", typeof(int));
    
            var idBecadoParameter = idBecado.HasValue ?
                new ObjectParameter("idBecado", idBecado) :
                new ObjectParameter("idBecado", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idEscuelaParameter = idEscuela.HasValue ?
                new ObjectParameter("idEscuela", idEscuela) :
                new ObjectParameter("idEscuela", typeof(int));
    
            var promedioParameter = promedio.HasValue ?
                new ObjectParameter("promedio", promedio) :
                new ObjectParameter("promedio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("idServicio", idServicio) :
                new ObjectParameter("idServicio", typeof(int));
    
            var horasRealizadasParameter = horasRealizadas.HasValue ?
                new ObjectParameter("horasRealizadas", horasRealizadas) :
                new ObjectParameter("horasRealizadas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaHistoricoSemestral", idSemestralParameter, idBecadoParameter, idCategoriaParameter, idEscuelaParameter, promedioParameter, idServicioParameter, horasRealizadasParameter);
        }
    
        public virtual int InsertaSemestral(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaSemestral", fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual int InsertaServicio(string nombre, string encargado, string telEncargado, string direccion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var encargadoParameter = encargado != null ?
                new ObjectParameter("encargado", encargado) :
                new ObjectParameter("encargado", typeof(string));
    
            var telEncargadoParameter = telEncargado != null ?
                new ObjectParameter("telEncargado", telEncargado) :
                new ObjectParameter("telEncargado", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaServicio", nombreParameter, encargadoParameter, telEncargadoParameter, direccionParameter);
        }
    
        public virtual int InsertaTutor(string nombre, string apellidoPaterno, string apellidoMaterno, string actividad, string telCasa, string telCelular, string telTrabajo, string domicilio, string mail)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("apellidoPaterno", apellidoPaterno) :
                new ObjectParameter("apellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("apellidoMaterno", apellidoMaterno) :
                new ObjectParameter("apellidoMaterno", typeof(string));
    
            var actividadParameter = actividad != null ?
                new ObjectParameter("actividad", actividad) :
                new ObjectParameter("actividad", typeof(string));
    
            var telCasaParameter = telCasa != null ?
                new ObjectParameter("telCasa", telCasa) :
                new ObjectParameter("telCasa", typeof(string));
    
            var telCelularParameter = telCelular != null ?
                new ObjectParameter("telCelular", telCelular) :
                new ObjectParameter("telCelular", typeof(string));
    
            var telTrabajoParameter = telTrabajo != null ?
                new ObjectParameter("telTrabajo", telTrabajo) :
                new ObjectParameter("telTrabajo", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("domicilio", domicilio) :
                new ObjectParameter("domicilio", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaTutor", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, actividadParameter, telCasaParameter, telCelularParameter, telTrabajoParameter, domicilioParameter, mailParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<View__BecadoTutor_Result> View__BecadoTutor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__BecadoTutor_Result>("View__BecadoTutor");
        }
    
        public virtual ObjectResult<View__HistoricoEscuela_Result> View__HistoricoEscuela()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoEscuela_Result>("View__HistoricoEscuela");
        }
    
        public virtual ObjectResult<View__HistoricoFolios_Result> View__HistoricoFolios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoFolios_Result>("View__HistoricoFolios");
        }
    
        public virtual ObjectResult<View__HistoricoPeriodosCategoriaBecadoTutor_Result> View__HistoricoPeriodosCategoriaBecadoTutor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoPeriodosCategoriaBecadoTutor_Result>("View__HistoricoPeriodosCategoriaBecadoTutor");
        }
    
        public virtual ObjectResult<View__HistoricoPeriodosCategoriaBecadoTutorEscuela_Result> View__HistoricoPeriodosCategoriaBecadoTutorEscuela()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoPeriodosCategoriaBecadoTutorEscuela_Result>("View__HistoricoPeriodosCategoriaBecadoTutorEscuela");
        }
    
        public virtual ObjectResult<View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial_Result> View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial_Result>("View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial");
        }
    
        public virtual ObjectResult<View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio_Result> View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio_Result>("View__HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio");
        }
    
        public virtual ObjectResult<View__HistoricoPeriodosCategoriaBecadoTutorSocialFolio_Result> View__HistoricoPeriodosCategoriaBecadoTutorSocialFolio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoPeriodosCategoriaBecadoTutorSocialFolio_Result>("View__HistoricoPeriodosCategoriaBecadoTutorSocialFolio");
        }
    
        public virtual ObjectResult<View__HistoricoServicio_Result> View__HistoricoServicio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View__HistoricoServicio_Result>("View__HistoricoServicio");
        }
    
        public virtual ObjectResult<View_Becado_BecadoTutor_Result> View_Becado_BecadoTutor(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_BecadoTutor_Result>("View_Becado_BecadoTutor", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoEscuela_Result> View_Becado_HistoricoEscuela(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoEscuela_Result>("View_Becado_HistoricoEscuela", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoFolios_Result> View_Becado_HistoricoFolios(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoFolios_Result>("View_Becado_HistoricoFolios", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoPeriodosCategoriaBecadoTutor_Result> View_Becado_HistoricoPeriodosCategoriaBecadoTutor(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoPeriodosCategoriaBecadoTutor_Result>("View_Becado_HistoricoPeriodosCategoriaBecadoTutor", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuela_Result> View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuela(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuela_Result>("View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuela", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial_Result> View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial_Result>("View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocial", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio_Result> View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio_Result>("View_Becado_HistoricoPeriodosCategoriaBecadoTutorEscuelaSocialFolio", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoPeriodosCategoriaBecadoTutorSocialFolio_Result> View_Becado_HistoricoPeriodosCategoriaBecadoTutorSocialFolio(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoPeriodosCategoriaBecadoTutorSocialFolio_Result>("View_Becado_HistoricoPeriodosCategoriaBecadoTutorSocialFolio", iDBecadoParameter);
        }
    
        public virtual ObjectResult<View_Becado_HistoricoServicio_Result> View_Becado_HistoricoServicio(Nullable<int> iDBecado)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Becado_HistoricoServicio_Result>("View_Becado_HistoricoServicio", iDBecadoParameter);
        }
    
        public virtual int View_BecadoPeriodo_HistoricoFolios(Nullable<int> iDBecado, Nullable<int> iDPeriodo)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            var iDPeriodoParameter = iDPeriodo.HasValue ?
                new ObjectParameter("IDPeriodo", iDPeriodo) :
                new ObjectParameter("IDPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("View_BecadoPeriodo_HistoricoFolios", iDBecadoParameter, iDPeriodoParameter);
        }
    
        public virtual int Grande(Nullable<int> iDBecado, Nullable<int> iDPeriodo)
        {
            var iDBecadoParameter = iDBecado.HasValue ?
                new ObjectParameter("IDBecado", iDBecado) :
                new ObjectParameter("IDBecado", typeof(int));
    
            var iDPeriodoParameter = iDPeriodo.HasValue ?
                new ObjectParameter("IDPeriodo", iDPeriodo) :
                new ObjectParameter("IDPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Grande", iDBecadoParameter, iDPeriodoParameter);
        }
    }
}
